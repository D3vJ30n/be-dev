plugins {
    id 'java'
    id 'war'
    id 'application'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // 기존 의존성
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.3'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
    implementation 'javax.servlet:jstl:1.2'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    implementation 'net.java.dev.jna:jna:5.13.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.apache.tomcat:tomcat-catalina:9.0.97'

    // 테스트 의존성 수정 (중복 dependencies 블록 제거)
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.5.1' // Mockito

    // Lombok 설정
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    providedCompile 'org.apache.tomcat:tomcat-servlet-api:9.0.97'
}

// 메인 클래스 설정
application {
    mainClass.set('_test.test.WifiApiTest')
}

// execMain 태스크 수정
tasks.register('execMain', JavaExec) {
    mainClass.set('_test.test.WifiApiTest')
    classpath = sourceSets.main.runtimeClasspath
    doFirst {
        // Class.forName() 제거 (태스크 설정에서 직접 호출하지 않음)
        environment 'DB_URL', 'jdbc:mariadb://192.168.219.101:3306/testdb1'
        environment 'DB_USER', 'root'
        environment 'DB_PASSWORD', 'Jdm4568396*'
    }
}

// Java 버전 설정
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// 인코딩 설정
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// WAR 설정
war {
    enabled = true
    webAppDirName = 'src/main/webapp'
}

// 소스 세트 설정
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

// 설정 확장
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
